<!doctype html>
<html lang="en">
<head>
  <%= javascript_include_tag "application" %>
	<meta charset="UTF-8" />
	<title>Sample App</title>
    <style type="text/css">
        body {
            margin: 0;
        }
    </style>
</head>
<body>

<script type="text/javascript">

let game = new Phaser.Game(800, 600, Phaser.AUTO, '', { preload: preload, create: create, update: update });
let platforms;
let score = 0;
let scoreText;

function preload() {
  game.load.baseURL = 'https://s3.amazonaws.com/sample-phaser/';
  game.load.crossOrigin = 'anonymous';
  game.load.image('sky','sky.png');
  game.load.image('platform', 'platform.png');
  game.load.image('star', 'star.png');
  game.load.spritesheet('dude', 'dude.png', 32, 48);

}

function create() {
  // Enable Arcade physics
  game.physics.startSystem(Phaser.Physics.ARCADE);
  // background
  game.add.sprite(0,0, 'sky');
  // Create ground and 2 ledges. Enable physics for objects in group
  platforms = game.add.group();
  platforms.enableBody = true;

  // Create the ground and scale it to fit
  let ground = platforms.create(0, game.world.height - 64, 'platform');
  ground.scale.setTo(2, 2);
  ground.body.immovable = true;

  //ledges
  let ledge = platforms.create(400, 400, 'platform');
  ledge.body.immovable = true;
  ledge = platforms.create(-150, 250, 'platform');
  ledge.body.immovable = true;

  // Player and settings
  player = game.add.sprite(32, game.world.height -150, 'dude');
  game.physics.arcade.enable(player);
  player.body.bounce.y = 0.2;
  player.body.gravity.y = 300;
  player.body.collideWorldBounds = true;
  player.animations.add('left', [0, 1 , 2, 3], 10, true);
  player.animations.add('right', [5, 6, 7, 8], 10, true);

  // Keyboard control
  cursors = game.input.keyboard.createCursorKeys();

  stars = game.add.group();
  stars.enableBody = true;

  for (let i =0; i <12; i++) {
    let star = stars.create(i*70, 0, 'star');

    star.body.gravity.y = 300;
    star.body.bounce.y = 0.7 + Math.random() *0.2;
  }
  scoreText = game.add.text(16, 16, 'score:0', {fontSize: '32px', fill: '#000'});

}

function update() {
  let hitPlatform = game.physics.arcade.collide(player, platforms);

  player.body.velocity.x = 0;

  if(cursors.left.isDown) {
    player.body.velocity.x = -150;
    player.animations.play('left');
  } else if (cursors.right.isDown) {
    player.body.velocity.x = 150;
    player.animations.play('right');
  } else {
    player.animations.stop();
    player.frame = 4;
  }

  // allow jump
  if (cursors.up.isDown && player.body.touching.down && hitPlatform) {
    player.body.velocity.y  = -350;
  }

  game.physics.arcade.collide(stars, platforms);
  game.physics.arcade.overlap(player, stars, collectStar, null, this);
}

function collectStar(player, star) {
  star.kill();

  score += 10;
  scoreText.text = 'Score: ' + score;
}
</script>

</body>
</html>
